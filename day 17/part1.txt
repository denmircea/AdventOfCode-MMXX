/// BMDesktop
#include <iostream>
#include <fstream>
#include <map>
#include <cstring>
using namespace std;

string nameProb="test";
ifstream fin(nameProb+".in");
//ofstream fout(nameProb+".out");
map< pair< pair<int,int>,int>,int > d;
char s[40];
int numar(int x,int y, int z)
{
    int nr=0;
    for(int i=x-1; i<=x+1; i++)
    {
        for(int j=y-1; j<=y+1; j++)
            for(int k=z-1; k<=z+1; k++)
            {

                if(i==x&&j==y&&k==z)
                    continue;
                if(d.find({{i,j},k})!=d.end())
                nr++;
            }
    }
    //cout<<cnt<<endl;
    return nr;
}
int main()
{
    int k=0;
    while(fin>>s)
    {
        for(int i=0; i<strlen(s); i++)
        {
            if(s[i]=='#')
                d[ {{0,k},i}]=1;
        }
        ++k;
    }
    int st=-1;
    int dr=10;
    for(int ciclu=1; ciclu<=6; ciclu++)
    {
        st--;
        dr++;
        map< pair< pair<int,int>,int>,int > aux;
        for(int i=st; i<=dr; i++)
        {
            for(int j=st; j<=dr; j++)
                for(int k=st; k<=dr; k++)
                {
                    if(d.find({{i,j},k})!=d.end())
                    {
                        /// aici am forma
                        int nrvecini=numar(i,j,k);
                        if(nrvecini==2||nrvecini==3)
                        {
                            aux[ {{i,j},k}]=1;
                        }
                    }
                    else
                    {
                        /// aici am liber
                        int nrvecini=numar(i,j,k);
                        if(nrvecini==3)
                        {
                            aux[{{i,j},k}]=1;
                        }
                    }
                }
        }
        d=aux;
    }
    cout<<d.size();
}

